version: 2.1

commands:
    install_pnpm:
        steps:
            - run:
                  name: Install pnpm package manager
                  command: |
                      corepack enable
                      corepack prepare pnpm@latest-7 --activate
    restore_pnpm_cache:
        steps:
            - restore_cache:
                  name: Restore pnpm Package Cache
                  keys:
                      - pnpm-packages-{{ checksum "pnpm-lock.yaml" }}
    save_pnpm_cache:
        steps:
            - save_cache:
                  name: Save pnpm Package Cache
                  key: pnpm-packages-{{ checksum "pnpm-lock.yaml" }}
                  paths:
                      - node_modules
    save_build_cache:
        parameters:
            cache_key:
                type: string
        steps:
            - save_cache:
                  name: Save build cache
                  key: build-output-<< parameters.cache_key >>-{{ .Environment.CIRCLE_SHA1 }}
                  paths:
                      - build
    restore_build_cache:
        parameters:
            cache_key:
                type: string
        steps:
            - restore_cache:
                  name: Restore build cache
                  keys:
                      - build-output-<< parameters.cache_key >>-{{ .Environment.CIRCLE_SHA1 }}
    ylide_build:
        parameters:
            build_cmd:
                type: string
        steps:
            - run:
                  name: Build project
                  command: |
                      CI=false pnpm run << parameters.build_cmd >>
    ylide_store_artifacts:
        steps:
            - store_artifacts:
                  path: build
                  destination: build

jobs:
    install: # this can be any name you choose
        docker:
            - image: node:16

        steps:
            - checkout
            - restore_pnpm_cache
            - install_pnpm
            - run:
                  name: Install Dependencies
                  command: |
                      pnpm install
            - save_pnpm_cache
    build:
        docker:
            - image: node:16
        parameters:
            cache_key:
                type: string
            build_cmd:
                type: string
        steps:
            - checkout
            - restore_pnpm_cache
            - install_pnpm
            - ylide_build:
                  build_cmd: << parameters.build_cmd >>
            - save_build_cache:
                  cache_key: << parameters.cache_key >>
            - ylide_store_artifacts
    deploy:
        docker:
            - image: node:16
        parameters:
            cache_key:
                type: string
            project_name:
                type: string
        steps:
            - checkout
            - restore_build_cache:
                  cache_key: << parameters.cache_key >>
            - run:
                  name: Install Wrangler
                  command: |
                      npm install -g wrangler@2.12.0
            - run:
                  name: Upload build through Wrangler
                  command: |
                      wrangler pages publish build --project-name=<< parameters.project_name >>

workflows:
    build_and_test:
        jobs:
            - install
            - build:
                  cache_key: hub
                  build_cmd: build-hub
                  filters:
                      branches:
                          only:
                              - hub-release
            - deploy:
                  cache_key: hub
                  project_name: ylide-mail-staging
                  requires:
                      - build
                  filters:
                      branches:
                          only:
                              - hub-release
